一、引用的基本使用
    作用：给变量起别名
    数据类型 & 别名 = 原名;
    eg.
        int a = 10;
        int &b = a;
        b = 20;
        cout << a << endl;//此时a也是20
二、引用的注意事项
    1. 引用必须初始化
        eg. 
            int &b; // error！
    2. 引用在初始化后就不可以改变了（可以赋值）
三、引用做函数参数
    作用：函数在传参时，可以利用引用的技术让形参修饰实参
    优点：可以简化指针修改实参
四、引用做函数返回值
    作用：引用是可以作为函数的返回值的
    1. 不要返回局部变量的引用
    //因为局部变量存储在内存中的栈区，在函数执行完后自动释放
    （可以使用static设置静态变量，存放在全局区）
    2. 函数的调用的可以作为左值
五、引用的本质
    引用的本质实在C++的内部实现一个指针常量（指向不可修改）
        int & ref = a;
    等价于
        int * const ref = &a;
六、常量引用
    常量引用用来修饰形参，防止误操作
    在函数形参列表中，使用const修饰形参，可以避免形参变为实参
    const int & ref = temp;//不允许修改引用的值了
    eg.
        void showValue(const int &val){
            cout << "val=" << val << endl;
        }
        int main()
        {
            a = 100;
            showValue(a);
            return 0;
        }

